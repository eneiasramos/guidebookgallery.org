<html>

<head>
<base href='https://guidebookgallery.org'>
<link rel="stylesheet" type='text/css' href='css/gui.css.php'>

<title>GUIdebook &gt; Articles &gt; &ldquo;Hands across the screen&rdquo;</title>

<meta name="author" content="Marcin Wichary">
<meta name="robots" content="index, follow">
<link rel='Start' href='guidebookgallery.org'><link rel='Contents' href='guidebookgallery.org/sitemap'><link rel='Up' href='articles'>

</head>

<body topmargin=0 bottommargin=0 leftmargin=0 rightmargin=0>

<table cellpadding=0 cellspacing=0 width=100% height=100%>
<tr style='background: url(intr/background.png) #E5E5E5'>
<td colspan=2 class=outer2small style='padding-left: 17px; padding-right: 17px; padding-top: 15px; padding-bottom: 7px'><a href='/'><img width=438 height=34 align=right border=0 alt='GUIdebook: Graphical User Interface gallery' src='intr/logo2small.png'></a><a class=outer2small href='index' title='Main page'><img style='margin-right: 3px' border=0 align=baseline src='intr/home.gif'>Home</a> <nobr>&gt; <a class=outer2small href='http://guidebookgallery.org/articles' title='Articles about GUIs'>Articles</a></nobr> <nobr>&gt; &ldquo;Hands across the screen&rdquo;</nobr></td></tr>
<tr>
<td width=53 valign=top rowspan=2 style='background: url(intr/2leftfill.png)'><img width=53 height=72 src='intr/2topleft.png'></td>
<td align=right width=100% style='height: 32px; background: url(intr/2topfill.png)'><nobr>
<a href='guis'><img width=60 height=32 alt='GUIs' border=0 src='intr/2tabs/guis.png'></a><a href='timelines'><img width=86 height=32 alt='Timelines' border=0 src='intr/2tabs/timelines.png'></a><a href='screenshots'><img width=112 height=32 alt='Screenshots' border=0 src='intr/2tabs/screenshots.png'></a><a href='icons'><img width=49 height=32 alt='Icons' border=0 src='intr/2tabs/icons.png'></a><a href='sounds'><img width=69 height=32 alt='Sounds' border=0 src='intr/2tabs/sounds.png'></a><a href='splashes'><img width=90 height=32 alt='Splashes' border=0 src='intr/2tabs/splashes.png'></a><a href='apps'><img width=55 height=32 alt='Applications' border=0 src='intr/2tabs/apps.png'></a><a href='ads'><img width=56 height=32 alt='Ads' border=0 src='intr/2tabs/ads-top3.png'></a><a href='videos'><img width=56 height=32 alt='Videos' border=0 src='intr/2tabs/videos-top3.png'></a><a href='articles'><img width=62 height=32 alt='Articles' border=0 src='intr/2tabs/articles-top3.png'></a><a href='books'><img width=53 height=32 alt='Books' border=0 src='intr/2tabs/books-top3.png'></a><a href='tutorials'><img width=78 height=32 alt='Tutorials' border=0 src='intr/2tabs/tutorials-top3.png'></a><a href='extras'><img width=96 height=32 alt='Extras' border=0 src='intr/2tabs/extras.png'></a></nobr></td></tr>
<tr><td valign=top width=100% height=100% style='background: url(intr/background2.png) #f2f2f2; padding-top: 30px; padding-left: 0px; padding-right: 10px; padding-bottom: 30px;'>
<table width=100% cellpadding=0 cellspacing=0><tr><td><table cellpadding=0 cellspacing=0 width=100%><tr height=20><td><nobr><a href='articles'><img width=9 height=20 style='margin-right: 10px' border=0 alt='Go back' src='intr/2captions/goback.png'><img border=0 alt='Articles' hspace=0 src='intr/2captions/articles.png'></a></td><td valign=top height=20><img width=19 height=20 align=left hspace=0 src='intr/3toprise.png'></td><td valign=top height=20 rowspan=3 width=100% style='background: url(intr/3topfill.png) white top repeat-x'><img border=0 alt='Hands across the screen' style='margin-left: 3px; margin-top: 12px; margin-right: 10px' src='intr/3captions/handsacrossthescreen.png'></td><td valign=top style='background: url(intr/3rightfill.png)' height=20><img width=12 height=20 align=right hspace=0 src='intr/3topright.png'></td></tr><tr><td valign=top width=20 style='background: url(intr/3topleftfill.png) top repeat-x'><img width=20 height=20 hspace=0 src='intr/3topleft.png'></td><td valign=top><img align=left hspace=0 src='intr/3topleftrise.png'></td><td valign=top height=20 style='background: url(intr/3rightfill.png)'></td></tr></table></td></tr><tr><td><table cellpadding=0 cellspacing=0 width=100%><tr><td width=20 height=50 style='background: url(intr/3leftfill.png) white left repeat-y;'><img width=20 height=1 src='intr/3leftfill.png'></td><td width=100% class=box3text style='background: white; padding-top: 20px; padding-left: 10px; padding-right: 15px; '>
<p class=subhead>
Why scrollbars are on the right and other stories 
</p>
<p class=source>
1997&rsquo;s paper by <a href='http://www.hcibook.com/alan'>Alan Dix</a>, <img width=10 height=8 align=baseline title='Link points to external site' alt='Link points to external site' src='intr/external.gif'> 
published with author&rsquo;s permission. Reprinted from Interfaces #37, 1998, pp. 19-22.
</p>

<table width=100% cellpadding=0 cellspacing=0><tr><td width=50% height=8 style='background: url(intr/divleftfill.png)'><img width=1 height=8 src='intr/divleftfill.png'></td><td width=8 height=8><img width=8 height=8 src='intr/divmed.png'></td><td width=50% height=8 style='background: url(intr/divrightfill.png)'><img width=1 height=8 src='intr/divrightfill.png'></td></tr></table>
<p>
Why are scrollbars on the right, and is it the best place for them? There 
are good reasons to think that the left-hand side may be the better choice, 
but in virtually every interface since the Xerox Star the scrollbar has appeared on 
the right-hand side. In this short paper we&rsquo;ll look at this issue and 
also at the design of a browser several years ago, which raised similar issues 
in the placement of on-screen buttons. In both cases, the best placement does 
not look right when you see it statically, but feels right when it is used. 
The reason for this discrepancy is an aversion to virtual hands across the screen. 
</p><p class=caption>
Just another scrollbar
</p><p>
After typing, using a scrollbar must be one of the commonest actions in 
a graphical interface. As with all common widgets, it is easy to assume that 
there is nothing interesting in its design. Of course, there have been 
extensions to the basic scrollbar, such as Ahlberg and Shneiderman&rsquo;s (1994) 
Alphaslider or Brewster et al.&rsquo;s (1994) auditory-enhanced scrollbar, 
and if you look back at older scrollbars, the mode of interaction is 
sometimes quite different. Also there are variations in current scrollbars: 
in the buttons placed at top and bottom (one arrow top and bottom, both at 
one end, both at both ends), in the information added to the scrollbar 
itself (e.g. miniature view of the document lines), in the feedback from the 
window (continuous while the scrollbar is being moved or jump scrolling when 
it is released). However, the basic current scrollbar design is taken for granted. 
</p><p>
<table width=1 cellpadding=0 cellspacing=0 align=right class=screenshotmargin><tr><td align=left><img class=screenshotborderless alt='Figure 1. Rapid eye movement' title='Figure 1. Rapid eye movement' src='pics/articles/handsacrossthescreen/back-and-for.gif'></td></tr><tr><td class=imagecaption>Figure 1. Rapid eye movement</td></tr></table>
</p><p class=caption>
Sinister positioning?
</p><p>
Think of the reason for using a scrollbar. You have a document or list and 
want to find something. So you scroll a bit, examining the document as you go 
until you find the required position in the text or list. Now, consider your 
eye movement throughout this. For English and European languages the text is 
read from left to right and, furthermore, for lists of titles or names, it 
is usually the first few characters or words that are significant in identifying 
whether you are at the right place. So, your eye has to constantly scan from 
the scrollbar on the right (which you are controlling with a mouse and thus 
need to look at) to the start of the text on the left. To feel this in the 
extreme try resizing a window to make it very wide and short and then scroll to 
find something. 
</p><p>
Brewster et al. describe &ldquo;kangarooing.&rdquo; This happens on scrollbars where 
the user can click on the scrollbar below the handle (or &ldquo;thumb&rdquo;) 
causing the window to jump down a screenful. However, when doing this, at 
some point the handle jumps below the current mouse position and so the page 
jumps back <i>up</i> on the next mouse click, then down again, etc. If the material 
is being quickly scanned it may not be apparent at first that this is happening 
and it is certainly confusing for both novice and expert. As Brewster et al. 
point out, the feedback of the moving scrollbar can be quite small, hence is 
easy to miss <i>even if you are looking at it,</i> which, given the important information 
is on the left of the screen, it is highly unlikely you will be. 
</p><p>
So for both drag scrolling and jump scrolling the position of the scrollbar is 
problematic and it seems likely that the left hand side is a better design choice. 
Why then are virtually all scrollbars on the right? (see appendix 1 below)
</p><p class=caption> 
Origins?
</p><p>
<table width=1 cellpadding=0 cellspacing=0 align=right class=screenshotmargin><tr><td align=left><img class=screenshotborderless alt='Scrollbar in Xerox Star' title='Scrollbar in Xerox Star' src='pics/articles/handsacrossthescreen/star-scroll.gif'></td></tr></table>
In fact, the early scrollbars in the Smalltalk and Interlisp environments (the direct 
ancestors of our current WIMP interface), had user-configurable scrollbars, which 
could be made to appear either side. But the default and norm was on the left. 
In fact, the Interlisp scrollbar had a quite different interaction from current 
ones, with velocity-based scrolling, and the curious behaviour whereby the 
scrollbars appeared as you moved off the left of a window. The design choices 
around the latter were one of the early examples studied using QOC design 
rationale (MacLean et al. 1991). 
</p><p>
The history of the change from left to right puzzled me for some years, 
but it was only recently, on a visit to Rank Xerox&rsquo;s Cambridge laboratory, 
that I first saw a demonstration of GlobalView, the Xerox Star desktop 
interface. Its scrollbars were on the right (see right here). So the 
right-hand-side scrollbar appears to have begun there and has been inherited 
since by the Apple Lisa, then the Macintosh, and is now in virtually all 
windows interfaces. 
</p><p>
Of course, this still leaves the question of <i>why</i> the scrollbar moved to the right. 
</p><p class=caption>
A digression &ndash; arrows
</p><p>
While examining the Star scrollbar it is worth noting two differences from many 
current scrollbars. First of all note the &ldquo;-&rdquo; and &ldquo;+&rdquo; 
buttons. These scrolled back to the top of the current page, or on to the top 
of the next page respectively. This feature is available on some current 
scrollbars (e.g. Microsoft Word 6.0). Less obvious is the direction of the 
arrows. Compare them with your screen. Current arrows tend to point outwards, 
whereas the Star arrows pointed inwards. It is not that the functionality 
has swapped round, just the icon and the action metaphor. In the Star interface 
the arrows pointed in the direction the text would move in the window, 
the current designs point in the direction the window will move in the document. 
This is a fundamental problem that cannot be removed, as the text goes down, 
the handle goes up. The only scrollbar that I have seen which avoids 
this paradox was in the Spy editor (produced by Rutherford Appleton Laboratory for 
the PERT workstation) which had the scrollbar arranged horizontally across the 
top of the document! 
</p><p class=caption>
A similar problem
</p><p>
Before returning to the question of why the scrollbar is now on the right, I&rsquo;ll 
recount a design story with a similar problem. 
</p><p>
<table width=1 cellpadding=0 cellspacing=0 align=right class=screenshotmargin><tr><td align=left><img class=screenshotborderless alt='Figure 2. Browser &ndash; initial design' title='Figure 2. Browser &ndash; initial design' src='pics/articles/handsacrossthescreen/pe0.gif'></td></tr><tr><td class=imagecaption>Figure 2. Browser &ndash; initial design</td></tr></table>
Some years ago I worked on a project that, amongst other things, compared various 
designs for browsers. The first experiments compared a hypertext browser with one 
using an outliner style and one using a plain scrolling window (Monk et al. 
1988). The last of these was to have two forms of navigation (Figure 2), a 
scrollbar and page up/down controls. Along the top of the screen was a scrollbar 
that showed the current position in the document. The user could move to any location 
by clicking on the scrollbar (no dragging) and was helped in this by the display 
of section numbers at appropriate points. Now, this was not too long after the 
publication of Card, Moran and Newell&rsquo;s (1983) classic and the performance 
implications of KLM were foremost in the minds of the psychologists on the 
project. In particular, they wanted to avoid the &ldquo;homing&rdquo; time between 
mouse and keyboard and so we made all controls screen based, using the mouse, 
with no keyboard controls or short cuts. For page up/down scrolling we 
thus eschewed the keyboard and decided to put arrow buttons (yes, much agonising 
over the arrow directions) on the screen. These were positioned to the bottom 
right as seen in Figure 2. 
</p><p>
From the beginning something &ldquo;felt&rdquo; wrong with the page up/down 
buttons. The keyboard seemed easier to use even though you had to move back and 
forth from the mouse. However, to give a level playing field with the other 
browsers the scrolling browser was limited to screen-only controls. 
</p><p>
After the experiment was complete the event logs were analysed. In traditional 
fashion, the subjects had practice time with the interfaces before addressing the 
main tasks. During the latter, none of the subjects assigned to the scrolling 
browser used the page up/down buttons. 
</p><p>
This was not a problem for the first experiment, but later we wanted to 
run a similar experiment, this time with two versions of the scrolling 
browser. One version was to have only the numbered scrollbar, the other to 
have only the page up/down buttons. The intention was to investigate the different 
cognitive structures subjects built up when jumping about the document with a 
scrollbar compared with scrolling through the document sequentially. However, 
to be a valid comparison the two designs had to be equally usable, but 
the users had very clearly voted with their feet (or at least mice) and 
it was evident some redesign was necessary. 
</p><p>
At this point we needed to move from a vague feeling that something was 
wrong to a critical analysis of the problem. First of all, why did the 
keyboard &ldquo;feel&rdquo; OK, despite having to move back and forth 
from the mouse. A little self analysis showed that one could glance down 
at the keyboard and then return one&rsquo;s eyes to the screen without 
watching for the finger to strike the right key. After having fixed the button 
in space, our well-honed motor system is well able take over in parallel. 
Furthermore, it was very easy to re-fixate on the place where one left the 
screen. It is almost as if one had a visual stack, or hypertext &ldquo;back&rdquo; 
button to return to the last gaze point. In contrast, to &ldquo;press&rdquo; 
the on-screen page up/down buttons, one had to position the mouse over the 
correct button. This positioning task appeared to interfere with the ability 
to re-fixate. Also, until after the positioning was complete, one could 
not return one&rsquo;s eyes to the screen and this typically happened after 
the button was clicked. 
</p><p>
These differences with the buttons were aggravated by the disorienting nature 
of bitmap scrolling. On older character-map terminals the screens would 
often scroll line-by-line upwards or downwards allowing the user to see where 
text was going or coming from. In fact, Bornat and Thimbleby (1986) deliberately 
designed screen update policies to promote the correct feeling of movement. 
In contrast, bitmap screens tended to flash between one view and the next. This 
has not improved and the word processor I am currently using always redraws 
lines from the top to the bottom no matter which direction you scroll! 
</p><p>
<table width=1 cellpadding=0 cellspacing=0 align=right class=screenshotmargin><tr><td align=left><img class=screenshotborderless alt='Figure 3. Browser &ndash; redesign' title='Figure 3. Browser &ndash; redesign' src='pics/articles/handsacrossthescreen/pe1.gif'></td></tr><tr><td class=imagecaption>Figure 3. Browser &ndash; redesign</td></tr></table>
Having realised that the crucial issue was disorientation we were able to 
create a design for on-screen buttons by two simple expedients. First, 
the page up/down function was modified so that a section heading always snapped 
to the top of the screen. Because of the application data these sections were 
always guaranteed to be no more than half a screenful long. This meant that 
if one were scrolling down, this title would have been the one previously in 
the middle of the screen and if one were scrolling up it would be the next 
unseen section above. Second, we moved the page up/down buttons from the bottom 
right to the top left of the screen, and aligned them so that they were 
next to the beginning of the first line of text. Thus after clicking the 
relevant button one&rsquo;s eye naturally moved across to the section heading, 
thus allowing one to instantly re-orientate. 
</p><p>
The difference was phenomenal. Suddenly it became natural and easy to use. 
This design issue was not the focus of our work, so we never verified the 
difference experimentally. However, the effect was so marked that experiment was 
unnecessary. 
</p><p>
Success! But why did we automatically put the buttons at the bottom right and 
why, even after verifying that it &ldquo;felt&rdquo; right, did it still look 
wrong at the top? 
</p><p class=caption>
Hands across the screen
</p><p>
<table width=1 cellpadding=0 cellspacing=0 align=right class=screenshotmargin><tr><td align=left><img class=screenshotborderless alt='Figure 4. Hands across the screen?' title='Figure 4. Hands across the screen?' src='pics/articles/handsacrossthescreen/pe2.gif'></td></tr><tr><td class=imagecaption>Figure 4. Hands across the screen?</td></tr></table>
It was only years later when considering the right-handed scrollbar that the 
answer to both conundrums became clear. The right-hand side looks right 
because to grab a scrollbar on the left, or to press a button on the 
left would mean your hand would have to move across the screen. Wait &ndash; 
of course your hand doesn&rsquo;t really have to move across the screen, 
the mouse does, but it feels as if it would have to! In fact, for 
a touch screen, light pen or stylus the right-hand side is a good idea, 
but not on-screen. Anyway, what about the left-handed user...? 
</p><p class=author>
by Alan Dix, School of Computing, Staffordshire University, 1997.
</p>

<br clear=all>

<table width=100% cellpadding=0 cellspacing=0><tr><td width=50% height=8 style='background: url(intr/divleftfill.png)'><img width=1 height=8 src='intr/divleftfill.png'></td><td width=8 height=8><img width=8 height=8 src='intr/divmed.png'></td><td width=50% height=8 style='background: url(intr/divrightfill.png)'><img width=1 height=8 src='intr/divrightfill.png'></td></tr></table>
<p class=caption>
References
</p><p class=references>
C. Ahlberg and B. Shneiderman (1994). The Alphaslider: a compact and rapid 
selector. <i>Proceedings of CHI &rsquo;94,</i> Boston, ACM Press. pp. 365-371. 
</p><p class=references>
R. Bornat and H. Thimbleby (1986). <i>The life and times of ded, display 
editor.</i> Queen Mary and Westfield College, University of London. 
</p><p class=references>
S. A. Brewster, P. C. Wright and A. D. N. Edwards (1994). The design and 
evaluation of an auditory-enhanced scrollbar. <i>Proceedings of CHI &rsquo;94,</i> 
Boston, Massachusetts, ACM Press, Addison-Wesley. pp. 173-179. 
</p><p class=references>
S. K. Card, T. P. Moran and A. Newell (1983). <i>The Psychology of Human 
Computer Interaction.</i> Lawrence Erlbaum. 
</p><p class=references>
A. MacLean, R. Young, V. Bellotti and T. Moran (1991). 
Questions, options and criteria: elements of design space analysis. 
<i>Human-Computer Interaction,</i> 6: 201-250. 
</p><p class=references>
A. F. Monk, P. Walsh and A. J. Dix (1988). A comparison of hypertext, scrolling 
and folding as mechanisms for program browsing. <i>People and Computers: From 
Research to Implementation &ndash; Proceedings of HCI &rsquo;88,</i> Cambridge 
University Press. pp. 421-436. 
</p>

<table width=100% cellpadding=0 cellspacing=0><tr><td width=50% height=8 style='background: url(intr/divleftfill.png)'><img width=1 height=8 src='intr/divleftfill.png'></td><td width=8 height=8><img width=8 height=8 src='intr/divmed.png'></td><td width=50% height=8 style='background: url(intr/divrightfill.png)'><img width=1 height=8 src='intr/divrightfill.png'></td></tr></table>
<p class=caption>
Appendix 1: The exception proves the rule
</p><p>
<table width=1 cellpadding=0 cellspacing=0 align=right class=screenshotmargin><tr><td align=left><img class=screenshotborderless alt='Main window of Anubis Mounter' title='Main window of Anubis Mounter' src='pics/articles/handsacrossthescreen/anubis.gif'></td></tr><tr><td class=imagecaption>Main window of Anubis Mounter</td></tr></table>
Although most scrollbars are now found on the right, I have come cross one 
recent exception, the scrollbar on the Anubis Mounter control panel. This 
is a Macintosh utility for mounting SCSI devices whilst the Macintosh is running, 
avoiding having to shut down and restart the machine every time a device 
is added. The control panel has a &ldquo;designer&rdquo; style very different from 
the normal Macintosh look and feel. Because of this it does not use 
the standard Macintosh built-in widgets and hence the builders had free reign. 
</p><p>
In fact the left-hand scrollbar is particularly important in this 
control panel. With scrolling text the reader&rsquo;s <i>locus of attention</i> 
is on the initial letters of each line &ndash; on the left. In the Anubis 
Mounter, the interface has an outliner style showing a hierarchy: SCSI 
bus &ndash; drive &ndash; partition. To hide or reveal items within this 
hierarchy the user clicks on the small triangles to the left. That is, 
not only is the location of attention on the left, so also is the <i>locus 
of action.</i> Thinking back to Figure 1, if Anubis Mounter had a 
right-hand scrollbar, this would be the pattern of not just eye movement, but 
mouse movement as well! 
</p>

<br clear=all>

<table width=100% cellpadding=0 cellspacing=0><tr><td width=50% height=8 style='background: url(intr/divleftfill.png)'><img width=1 height=8 src='intr/divleftfill.png'></td><td width=8 height=8><img width=8 height=8 src='intr/divmed.png'></td><td width=50% height=8 style='background: url(intr/divrightfill.png)'><img width=1 height=8 src='intr/divrightfill.png'></td></tr></table>
<p class=caption>
Appendix 2: Sinister Scrollbar in the Xerox Star Xplained 
</p><p class=comment>
(written in 1998)
</p><p>
In the article above, I explained how the scollbar first moved to the right in 
the Xerox Star interface, but that I did not believe this was the correct 
place for it. Whilst at the CHI98 conference I was able to talk to David Smith, 
now of Stagecast Software, who worked as part of the Star design team. 
</p><p>
<table width=1 cellpadding=0 cellspacing=0 align=right class=screenshotmargin><tr><td align=left><img class=screenshotborderless alt='Scrollbar in Xerox Star' title='Scrollbar in Xerox Star' src='pics/articles/handsacrossthescreen/star-scroll.gif'></td></tr></table>
He explained how the movement of the scrollbar to the right was not an accident, but 
a deliberate design decision. The reasoning was that precisely because the left-hand 
side of the screen is important for reading text it is also important to 
keep it clear of unnecessary visual clutter. Hence the scrollbar, that had been 
on the left in the Smalltalk and InterLisp environments, was moved to the 
right-hand side. 
</p><p>
So, given my pronouncement that the right-hand side is a bad idea, am 
I wrong or were they? 
</p><p>
In fact, the answer is that the Xerox Star scrollbar is fundamentally different 
from current scrollbars and hence the problems I highlighted with current 
right-hand scrollbars do not apply to the Star scrollbar. 
</p><p>
Looking at the Star scrollbar (right), it has three types of control: 
</p><p>
<ol>
<li>the arrows which move the text a line at a time 
<li>the +/- buttons which move the text a page at a time 
<li>the scroll area with its diamond shaped &ldquo;handle&rdquo; 
</ol>
</p><p>
The arrow and page up/down buttons are similar to current scrollbar buttons and 
the scrollbar &ldquo;handle&rdquo; similarly allowed one to scroll to any point 
in the document. The major difference however between this and current scrollbars 
is that both kinds of large movement (2 and 3) moved to page boundaries. 
In each case the top of a page is aligned with the top of the screen. This 
is very similar to the redesign of the page up/down buttons in my previous 
article and the disorientation as one tries to match the old and new pages is 
thus not an issue. Only the line up/down buttons move the text to other, 
non-page-boundary offsets. This is also not a problem as the small 
movements make reorientation easy and for repeated line-by-line movement it is 
possible to position the mouse and then watch the screen as the mouse 
is clicked or held down for continuous scrolling. 
</p><p>
<table width=1 cellpadding=0 cellspacing=0 align=right class=screenshotmargin><tr><td align=left><img class=screenshotborderless alt='Scrollbar in Macintosh' title='Scrollbar in Macintosh' src='pics/articles/handsacrossthescreen/mac-scroll.gif'></td></tr></table>
As the Star evolved into the current Macintosh, Windows and X environments, the design 
changed to the current dragging form where the &ldquo;handle&rdquo; is grasped 
by the mouse and moved to an arbitrary point in the document. The design changed, 
but the rationale for placement was not revisited leading to the current, 
unsatisfactory situation. 
</p><p>
Another bit of design rationale that got lost in this transition was the direction 
of the arrows on the scrollbar. On most current scrollbars the line-by-line 
arrows point outwards whereas the Star arrows pointed inwards. In both 
cases pressing the upper arrow makes the window move upwards in the text (and 
hence also the scrollbar handle upwards). Recall, there is no obvious &ldquo;right&rdquo; 
answer for this. If the arrows point outwards they match the movement of the 
handle, but the text moves in the opposite direction (as you move up the 
document the text moves down). If instead, the arrows point inwards they match the 
movement of the text on the screen, but oppose the movement of the handle (the 
downwards arrow moves you upwards in the document). 
</p><p>
David Smith described to me how in the first version of the design documents for 
the Star, the scrollbar arrows pointed outwards as they do in modern interfaces. 
However, unsure of the correct orientation, the Star design team performed user 
studies with both orientations. Whereas the software designers were quite happy 
with the outwards form, the non-computing users were uniformly confused by 
this direction of arrows, hence the inwards pointing arrows were adopted 
for the final Star design. Unfortunately when the Star design documents 
were passed on to the later design teams for the Lisa and Macintosh, the 
initial, wrong version of the scrollbar designs was used! Hence we came 
by our current scrollbar arrow direction by accident and it is precisely the 
opposite of what was found to be easy to use. 
</p><p>
In both these examples, we see that apparently minor design changes can 
radically affect the feel and behaviour of an interface widget. Little things 
really do matter. 
</p>


</td><td height=50 style='background: url(intr/3rightfill.png)'><img width=12 height=1 src='intr/3rightfill.png'></td></tr></table></td></tr><tr><td><table cellpadding=0 cellspacing=0 width=100%><tr><td height=30><img width=20 height=30 hspace=0 src='intr/3bottomleft.png'></td><td height=30 width=100% style='background: url(intr/3bottomfill.png)'></td><td height=30><img width=30 height=30 hspace=0 src='intr/3bottomclosed.png'></td></tr></table></td></tr></table></td></tr>

<tr>
<td width=53 valign=top rowspan=2 style='background: url(intr/2bottomfill.png) top repeat-x'><img width=53 height=38 src='intr/2bottomleft.png'></td>
<td align=left valign=top width=100% style='height: 38px; background: url(intr/2bottomfill.png) top repeat-x; padding-left: 12px; padding-right: 12px'>

<table width=100% cellpadding=0 cellspacing=0>
<tr><td valign=top><nobr><a href='about'><img width=59 height=32 border=0 src='intr/2tabs/about.png'></a><a href='contact'><img width=70 height=32 border=0 src='intr/2tabs/contact.png'></a><a href='sitemap'><img width=117 height=32 border=0 src='intr/2tabs/sitemap.png'></a></nobr></td>
<td width=100% valign=top align=right style='padding-right: 10px; padding-top: 10px; padding-bottom: 10px' class=outer2small>


Page added on 25th October 2004.<br><br>Copyright &copy; 2002-2006 <a href='http://www.aresluna.org'>Marcin Wichary</a>, unless stated otherwise.</td></tr></table></td></tr></table>

</body>

</html>
