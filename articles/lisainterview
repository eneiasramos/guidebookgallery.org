<html>

<head>
<base href='https://guidebookgallery.org'>
<link rel="stylesheet" type='text/css' href='css/gui.css.php'>

<title>GUIdebook &gt; Articles &gt; Apple Lisa interview</title>

<meta name="author" content="Marcin Wichary">
<meta name="robots" content="index, follow">
<link rel='Start' href='guidebookgallery.org'><link rel='Contents' href='guidebookgallery.org/sitemap'><link rel='Up' href='articles'>

</head>

<body topmargin=0 bottommargin=0 leftmargin=0 rightmargin=0>

<table cellpadding=0 cellspacing=0 width=100% height=100%>
<tr style='background: url(intr/background.png) #E5E5E5'>
<td colspan=2 class=outer2small style='padding-left: 17px; padding-right: 17px; padding-top: 15px; padding-bottom: 7px'><a href='/'><img width=438 height=34 align=right border=0 alt='GUIdebook: Graphical User Interface gallery' src='intr/logo2small.png'></a><a class=outer2small href='index' title='Main page'><img style='margin-right: 3px' border=0 align=baseline src='intr/home.gif'>Home</a> <nobr>&gt; <a class=outer2small href='http://guidebookgallery.org/articles' title='Articles about GUIs'>Articles</a></nobr> <nobr>&gt; Apple Lisa interview</nobr></td></tr>
<tr>
<td width=53 valign=top rowspan=2 style='background: url(intr/2leftfill.png)'><img width=53 height=72 src='intr/2topleft.png'></td>
<td align=right width=100% style='height: 32px; background: url(intr/2topfill.png)'><nobr>
<a href='guis'><img width=60 height=32 alt='GUIs' border=0 src='intr/2tabs/guis.png'></a><a href='timelines'><img width=86 height=32 alt='Timelines' border=0 src='intr/2tabs/timelines.png'></a><a href='screenshots'><img width=112 height=32 alt='Screenshots' border=0 src='intr/2tabs/screenshots.png'></a><a href='icons'><img width=49 height=32 alt='Icons' border=0 src='intr/2tabs/icons.png'></a><a href='sounds'><img width=69 height=32 alt='Sounds' border=0 src='intr/2tabs/sounds.png'></a><a href='splashes'><img width=90 height=32 alt='Splashes' border=0 src='intr/2tabs/splashes.png'></a><a href='apps'><img width=55 height=32 alt='Applications' border=0 src='intr/2tabs/apps.png'></a><a href='ads'><img width=56 height=32 alt='Ads' border=0 src='intr/2tabs/ads-top3.png'></a><a href='videos'><img width=56 height=32 alt='Videos' border=0 src='intr/2tabs/videos-top3.png'></a><a href='articles'><img width=62 height=32 alt='Articles' border=0 src='intr/2tabs/articles-top3.png'></a><a href='books'><img width=53 height=32 alt='Books' border=0 src='intr/2tabs/books-top3.png'></a><a href='tutorials'><img width=78 height=32 alt='Tutorials' border=0 src='intr/2tabs/tutorials-top3.png'></a><a href='extras'><img width=96 height=32 alt='Extras' border=0 src='intr/2tabs/extras.png'></a></nobr></td></tr>
<tr><td valign=top width=100% height=100% style='background: url(intr/background2.png) #f2f2f2; padding-top: 30px; padding-left: 0px; padding-right: 10px; padding-bottom: 30px;'>
<table width=100% cellpadding=0 cellspacing=0><tr><td><table cellpadding=0 cellspacing=0 width=100%><tr height=20><td><nobr><a href='articles'><img width=9 height=20 style='margin-right: 10px' border=0 alt='Go back' src='intr/2captions/goback.png'><img border=0 alt='Articles' hspace=0 src='intr/2captions/articles.png'></a></td><td valign=top height=20><img width=19 height=20 align=left hspace=0 src='intr/3toprise.png'></td><td valign=top height=20 rowspan=3 width=100% style='background: url(intr/3topfill.png) white top repeat-x'><img border=0 alt='An Interview with Wayne Rosing, Bruce Daniels, and Larry Tesler' style='margin-left: 3px; margin-top: 12px; margin-right: 10px' src='intr/3captions/aninterviewwithwaynerosingbrucedanielsandlarrytesler.png'></td><td valign=top style='background: url(intr/3rightfill.png)' height=20><img width=12 height=20 align=right hspace=0 src='intr/3topright.png'></td></tr><tr><td valign=top width=20 style='background: url(intr/3topleftfill.png) top repeat-x'><img width=20 height=20 hspace=0 src='intr/3topleft.png'></td><td valign=top><img align=left hspace=0 src='intr/3topleftrise.png'></td><td valign=top height=20 style='background: url(intr/3rightfill.png)'></td></tr></table></td></tr><tr><td><table cellpadding=0 cellspacing=0 width=100%><tr><td width=20 height=50 style='background: url(intr/3leftfill.png) white left repeat-y;'><img width=20 height=1 src='intr/3leftfill.png'></td><td width=100% class=box3text style='background: white; padding-top: 20px; padding-left: 10px; padding-right: 15px; '>
<p class=subhead>
A behind-the-scenes look at the development of Apple&rsquo;s Lisa.
</p>
<p class=source>
Reprinted from Byte, issue 2/1983, pp. 90-114.
</p>

<table width=100% cellpadding=0 cellspacing=0><tr><td width=50% height=8 style='background: url(intr/divleftfill.png)'><img width=1 height=8 src='intr/divleftfill.png'></td><td width=8 height=8><img width=8 height=8 src='intr/divmed.png'></td><td width=50% height=8 style='background: url(intr/divrightfill.png)'><img width=1 height=8 src='intr/divrightfill.png'></td></tr></table>
<p class=lead>
Of the more than 90 members of the Apple engineering staff who participated 
in the Lisa project, Wayne Rosing, Bruce Daniels, and Larry Tesler are three 
of those who were most responsible for its final form. Rosing, formerly of 
the Digital Equipment Company, oversaw hardware development until Lisa went into 
pilot manufacture and then assumed responsibility for technical management of 
the entire Lisa project. Daniels and Tesler were responsible for Lisa&rsquo;s systems 
software and applications software, respectively. Chris Morgan, senior editor 
Gregg Williams, and West Coast editor Phil Lemmons interviewed the three at 
Apple&rsquo;s headquarters in Cupertino, California, last October.
</p><p>
<b>BYTE: Tell us how you staffed the Lisa project.
</p><p>
Tesler:</b> In software, we drew mostly experienced people from other companies and 
very few people straight out of school. Even the ones we took
out of school generally had lots of job experience. In fact, one time I surveyed 
the applications group and found an average of nine years&rsquo; work experience 
in software. When we looked at resumes, we tried to find people with several 
years of experience in development. We made exceptions if someone had specialized 
in something we were interested in or was a top student who also had good summer 
experience. We wanted an experienced team because what we&rsquo;ve been doing is 
a very major software effort. It&rsquo;s very complex, and there&rsquo;s such a 
large body of software to crank out and make reliable that it takes experienced 
people. 
</p><p>
<b>BYTE: When did you do the hiring? 
</p><p>
Tesler:</b> The project went through phases. There was some design and some 
implementation when the project first started two and a half years ago, but 
we hired most of our software people about two years ago. In three months, 
we hired most of the software staff, and then they spent several months learning about the
machine and designing their particular parts of the software. The bulk of the 
programming started about a year and a half ago.
</p><p>
We had to spend quite a long time just building a team &ndash; people who had a common 
view and could work together. We drew people from different companies with 
completely different backgrounds and tried to do, something that nobody in this group 
had ever done. Some of us had done parts of it before. We were developing everything 
in parallel: the hardware, the operating system, the applications, the manuals, 
the details of the user interface. We did have a sort of fundamental philosophy, 
but having to do everything at once means you&rsquo;re never sure when you&rsquo;re going 
to get what you need from the person who does whatever you need next. 
</p><p>
<b>Daniels:</b> I think communication is the key there. If you have that many things 
going in parallel, you spend a lot of time communicating so each of you knows what 
the other&rsquo;s doing and can depend on each other.
</p><p>
<b>Tesler:</b> It took a while to work out those channels. It was rough at the 
beginning, but it&rsquo;s pretty easy now. Our progress was gradual. I think I&rsquo;d 
call it team-building. Some of the things were hard to do in an organization that&rsquo;s 
thrown together like this. But once you&rsquo;ve got a team built, it&rsquo;s a 
valuable asset. Of course, we were doing technical work all along, but in a sense 
we spent a year building the team and a year building the product. Now when we 
build something else, we can do it without the team building step.
</p><p>
<b>BYTE: What about project security? 
</p><p>
Rosing:</b> We tried to be as secure as we could without creating a discouraging 
atmosphere for people to work in. Within the group there has always been total 
information transfer, and we&rsquo;ve kept lots of machines available. People have been
able to tab machines home with them. There was always the risk of losing a Lisa 
in a burglary, but we had a rule that floppy disk had to be kept separate from 
the machine. We felt it was worth risking a theft to gain the increased productivity 
of people working at home. We&rsquo;ve been very fortunate; we haven&rsquo;t lost 
one machine. 
</p><p>
<b>BYTE: How did you schedule the project?
</p><p>
Tesler:</b> People made estimates, but it was difficult. All the estimates were 
conditional &ndash; &ldquo;If the hardware is here by a certain date and 
the operating system is frozen and I have the user-interface definition and I 
can get some assistance from people who have the right sort of experience, 
then I can do it in this many months.&rdquo; But none of the ifs were ever 
really possible. People were really hesitant to make a firm date because there 
were so many contingencies. We did come up with schedules all the time, but they were myths.
</p><p>
<b>Daniels:</b> Getting Lisa to market has been a dream, a goal that we all have, 
Although we&rsquo;re willing to make compromises to get Lisa out expeditiously, the 
dream of what we&rsquo;re trying to achieve is the major thing. 
</p><p>
<b>Rosing:</b> We had this dream of what we wanted to do, and I think over
time we recognized that we couldn&rsquo;t achieve some of the goals. We&rsquo;ll have 
to take care of them later. We&rsquo;ve taken the attitude that Lisa is going 
to be good and we&rsquo;re not going to sacrifice the integrity of the product 
for scheduling. We wanted to make a very balanced set of decisions, and so 
everything, as I say, just started to come together. The floppy disk works 
well, the mouse works well, the hardware works well, the software is beginning to 
come, and now we&rsquo;re cranking to get this first release out. But we won&rsquo;t 
let it be compromised because of scheduling. 
</p><p>
<b>Daniels:</b> Part of the difficulty was that both the user interface and the 
internals &ndash; the architecture &ndash; of the software are revolutionary. 
Getting that architecture designed and built was a big scheduling problem. Once 
we&rsquo;d done that, we&rsquo;d built the foundation. Now building the applications 
is much smoother and has been much easier for us to predict.
</p><p>
<b>Tesler:</b> We didn&rsquo;t know if some of the things we started would work 
at all, like the way the dot-matrix printer is used and even the way the 
letter-quality printer is used to print the graphics.
</p><p>
<b>Daniels:</b> No one had ever done that before.
</p><p>
<b>Tesler:</b> Theoretically, it ought to be possible, but it had never been done, 
and the manufacturer of the printer didn&rsquo;t believe it could be done. It 
had to be possible in order for this product to do what we wanted, but no 
one could predict how long it was going to take. When we hired the printer people 
we told them to do it in two months. It took them a year and a half, but they 
did it. And then the high-density disk drives are new technology to Apple. 
A lot of the concepts in there had never been tried before. That was one of the 
biggest risks. And Apple not only built disk drives for the first time but built 
revolutionary disk drives.
</p><p>
<b>BYTE: What makes them revolutionary?
</p><p>
Rosing:</b> One of the major things we did was to vary the speed of the disk 
as you change the track position, so the drives keep constant area density and 
that gives them a greater capacity. Second, we used microstepping algorithms 
on the stepper motor so that if a head gets off track because of changes in 
humidity and temperature, the intelligent controller can hunt and find the track. 
So we have much better interchangeability, with much higher density, and we&rsquo;re 
getting approximately 50 to 60 percent more data on that disk by good systems 
engineering. Some of the competitive units have a greater capacity, but 
we think the error rate ultimately suffers. We wouldn&rsquo;t tolerate a serious 
error-rate problem.
</p><p>
<b>BYTE: How does the error rate com pare with double-sided double density disks?
</p><p>
Rosing:</b> As for hard-error rates, we&rsquo;re talking about 10<sup><small>-12</small></sup>, 
and that occurs after so many bits that it&rsquo;s hard to measure. But we&rsquo;re 
quite delighted that the measurements are impossible to take. Basically that means 
the errors are low.
</p><p>
<b>BYTE: Did you work more than 40-hour weeks?
</p><p>
Tesler:</b> Each engineer set his or her own schedule. Some engineers work something 
like Monday through Friday from nine to five. Others work all day at the office, 
then go home and work all night there. And what an individual engineer does may 
vary from time to time. 
</p><p>
<b>Daniels:</b> These people have pride. They set their own milestones ant they 
want to meet them, so they&rsquo;ll put in extra work to do that. 
</p><p>
<b>Tesler:</b> We decided a long time ago that since the project would obviously go 
on for more than a few months &ndash; a couple of years &ndash; we couldn&rsquo;t 
have this constant pressure on everybody, because people would just crack. 
</p><p>
<b>BYTE: As individual designers, do you feel that your signature is on that machine?
</p><p>
Tesler:</b> I think that&rsquo;s true of everybody in the group. Even people
who have been with us for only a few months have something in the Lisa that they can 
look at and say, &ldquo;That was my idea; that&rsquo;s my code.&rdquo; It&rsquo;s 
really a group effort. Even marketing got involved in the design effort in 
various ways, particularly in user-interface issues, product design, packaging, 
and the style of the manuals. The whole division really got involved.
</p><p>
<b>BYTE: When did you decide to incorporate all the fundamental applications into the 
system software? 
</p><p>
Daniels:</b> At the very beginning. Some applications weren&rsquo;t decided until 
later, but the integration, the way it all fit together, was a goal from the very beginning.
</p><p>
<b>Rosing:</b> As a matter of fact, we cut out a few more things because we just 
didn&rsquo;t feel we could manage a project that large. Then we added a couple 
things back in as we became more comfortable with the development cycle. But we&rsquo;ve 
basically been operating on the same goal for the past two years, with very 
little change of direction. 
</p><p>
<b>BYTE: What was the sequence in the early days? Did you decide what the project 
had to look like to the end user, and then what software was required, and then... 
</p><p>
Daniels:</b> Then hardware. In fact, we spent the first six months hammering out 
the user-interface docket. We had that completely specified before we really 
started the applications. I think the key to success here is to know where 
you&rsquo;re going before you start. 
</p><p>
<b>Tesler:</b> The hardware, the operating system, and the applications were 
all developed somewhat in parallel, but there was a definite cause and effect. 
The people who designed the hardware had to make decisions, for example, about 
whether the disk drive should have a door that you flip open or a button to 
push, that kind of thing. The designers focused on that aspect of the user interface 
even before the rest of the user interface. They didn&rsquo;t want the user to 
be able to accidentally pull out a disk when it was being written on or something. 
So some decisions were made even
before the hardware was designed. There have also been hardware revisions. The first 
Lisa hardware was here when I came, over two years ago. It&rsquo;s gone through 
several... how many revisions since then?
</p><p>
<b>Rosing:</b> About four. Each one&rsquo;s been an iteration. We discovered a 
few things in the early hardware that wouldn&rsquo;t work well. We just took them 
out because we couldn&rsquo;t do them properly. The rest has mostly been a 
matter of fine-tuning Lisa so that it&rsquo;s very manufacturable and very reliable.
</p><p>
<b>Tesler:</b> Each time they go through a cycle, the people working on user 
interface get another crack at it &ndash; &ldquo;Since you&rsquo;re going to revise 
the hardware anyway, why don&rsquo;t you...?&rdquo; Or the people doing the operating 
system say, &ldquo;The memory-management unit needs to be more general, and 
since you&rsquo;re redesigning the hardware anyway...&rdquo; So we were able to 
get in some hardware revisions. Also, that keyboard you saw yesterday is not 
the final one. After user testing, and because of needing to support the 
European market, we determined that we really needed a couple more keys on the keyboard, 
so we made a major change in the keyboard layout. 
</p><p>
<b>Rosing:</b> One of the things about this project that&rsquo;s different is that, 
more than any other I&rsquo;ve been associated with, there&rsquo;s a continuous loop for dealing 
with user issues. We&rsquo;ve gone to the software and that has implied a hardware 
change. We synthesized a lot of different disciplines. The power-off button used to be 
a traditional button on the back of the machine, but we didn&rsquo;t want to 
encourage users to turn off their machines that way because if they left a 
document open, they would lose it. 
</p><p>
<b>BYTE: Do you expect to find a little initial resistance to the fact that 
the machine doesn&rsquo;t actually turn off when you push a button? 
Do you think people are going to say, &ldquo;Well, I know I can leave it alone 
now, but I want to make sure it turns off&rdquo;? 
</p><p>
Rosing:</b> Right. It does feel a little funny at first, but after a few times you
begin to have confidence that the thing does turn itself off. 
</p><p>
<b>BYTE: When you finally got the user-interface specified, did you have a 
brief description of it that everybody knew by heart?
</p><p>
Daniels:</b> It was about a 35-page document.
</p><p>
<b>BYTE: Thirty-five pages of specifications? 
</p><p>
Tesler:</b> We have something called the
User-Interface Standard, and it consisted of those things which would be common 
to all applications. Also, the year after that document was published some revisions and 
some changes were made, and as we built applications we found that they had even 
more in common than we envisioned. Then we would adopt those things as part 
of the standard. 
</p><p>
<b>Daniels:</b> Another thing we&rsquo;ve done is
user tests &ndash; taking our ideas and bringing in naive users and sitting them down 
and seeing what their impressions are. That has caused some changes, and I 
think that&rsquo;s all shown in the quality.
</p><p>
<b>BYTE: Where did you get your naive users?
</p><p>
Tesler:</b> Various places &ndash; the bulk of them were new Apple employees. 
We had a screening process. New Apple employees go through an orientation the 
first Monday morning they&rsquo;re here. We handed out a questionnaire to the 
new employees about their previous experience with computers word processors, video 
games, and that sort of thing, and then what kind of work they did. Someone in 
our training department screened all those vitae. I&rsquo;d go in and say I needed 
three user test subjects this week who have no word-processing experience but 
who are secretaries or accounting people to test out our Lisa Calc. She&rsquo;d go 
through and pick out some candidates and I&rsquo;d pick the ones wanted, based 
on their experience for whatever test I was trying to run. We had about 50 
tests this year in engineering to test out the software. 
</p><p>
<b>BYTE: The fact that you responded to the tests speaks well for the end product. 
The changes in the keyboard, for instance. How recently did you decide to change 
the keyboard for the final time?
</p><p>
Tesler:</b> There were several changes. Those from the user tests had to do with 
changing the numeric pad so it had the arrow keys on it so you could move around 
in the Lisa Calc table. Those tests were run around January [1982], I think.
</p><p>
<b>Rosing:</b> January, and in March we decided to make the change. 
</p><p>
<b>Tesler:</b> That was just key-cap legends that had changed. The other change 
has to do with the number of keys on the keyboard and was primarily for the 
benefit of international sales, although it did improve the user interface in 
terms of the positioning of the Enter key and the Extended Character option key, 
which gives you extended character sets. Those were all done around the same time.
</p><p>
<b>Rosing:</b> The interesting thing is that we were at the stage in the program 
where the decision to make even what sounds like a simple change takes six months 
to percolate through because it&rsquo;s not a simple engineering change &ndash; it&rsquo;s 
manufacturing, tooling, documentation.
</p><p>
<b>Daniels:</b> We made one legend change in June or July &ndash; the Apple key. When was that?
</p><p>
<b>Tesler:</b> July, and it&rsquo;s just now showing up.
</p><p>
<b>BYTE: A legend change? 
</p><p>
Tesler:</b> You saw two keys that said Command on them. The new version has only 
one, and instead of saying Command it has a picture of an apple on it. The reason 
is that the key&rsquo;s used as a shortcut to choose a menu command. If you 
look at a menu, on the right you&rsquo;ll see this little apple symbol
and a letter. If you hold down the Apple key and the letter, you get the command. 
We couldn&rsquo;t find any way to symbolize the Command key that would fit nicely 
in a menu and be recognizable to people. We tried and tried. Finally we decided that 
the apple looked nice and had a nice sound to it &ndash; &ldquo;Apple X,&rdquo; &ldquo;Apple 
R&rdquo; &ndash; and it keeps Apple in the mind of the user instead of 
&ldquo;control&rdquo; something else. It&rsquo;s a symbol that everybody using this 
machine will recognize instantly, so we decided to put it on the key as well as 
on the screen. To finish the artwork in time to get the machines to test users 
in time to get responses, and so on, the change had to be in by a certain date. 
The decision was made only hours before the deadline. 
</p><p>
<b>BYTE: Are there going to be two Command keys without legends on them?
</p><p>
Tesler:</b> No, only one. We studied IBM and DEC and other keyboards and found 
that they all have just a single Command or Control key on the left-hand side. 
We also really wanted to put an Enter key on the main keyboard because we would like 
to be able to offer a configuration in which an alphabetic keyboard and a numeric 
keyboard are independent &ndash; for, say, a company that does only word processing. 
Word processors don&rsquo;t need the Clear function, but they do need the Enter 
function, so we wanted to be able to have the Enter key on the main keyboard; 
that way, even people without numeric keypad can hit Enter. Again, on IBM and DEC 
keyboards the Enter key is standard; on many of those keyboards, that&rsquo;s the 
standard position for the Enter key. So we decided to be more like other 
companies. The Enter key also gives us the option of removing the numeric 
keypad without losing an important function. And then the option keys were put 
on the side of those, and there we decided we did need two option keys, left 
and right, because they&rsquo;re used very much like shift keys for typing, and 
in Europe it would be very important to be able to touch-type foreign alphabets 
for international correspondence, mathematical symbols, and other special 
characters. So there were some trade-offs. We didn&rsquo;t want to just keep 
jamming two of every key on the keyboard, so we decided what the priorities were 
and ended up being fairly close to the industry standard. We have one Apple key, 
one Enter key, and two Option keys. 
</p><p>
<b>BYTE: The user-interface design seems to have been difficult. 
</p><p>
Tesler:</b> That was the hard thing that affected the most people. A lot of 
software and hardware engineering issues were very difficult, but they affected 
only a few people. Interface issues affected half the division because Training, 
Publications, Marketing, and the software person implementing the application all 
had an opinion. People like us who were overviewing all the applications had 
opinions, in-between managers had opinions, kibitzers on the side had 
opinions, too. Not everybody can
talk about what gate to use in some circuit or what routine to use in some 
program, but everybody can talk about the user interface. So we had to 
accommodate all of these things. And it turned out that good ideas and good 
criticisms came from everywhere. We had to come up with some objective way 
to decide. That&rsquo;s why we established the methodology which involved user 
testing. We had a procedure for proposing changes, reviewing the changes, 
narrowing it down to a few choices, with certain criteria like consistency and 
parsimony. And then we actually implemented two or three of the various ways and tested 
them on users, and that&rsquo;s how we made the decisions. Sometimes we found 
that everybody was wrong. We had a couple of real beauties where the users 
couldn&rsquo;t use any of the versions that were given to them and they would 
immediately say, &ldquo;Why don&rsquo;t you just do it this way?&rdquo; and that was obviously the
way to do it. So sometimes we got the ideas from our user tests, and as soon
as we heard the idea we all thought &ldquo;Why didn&rsquo;t we think of that?&rdquo; Then
we did it that way.
</p><p>
<b>BYTE: Bruce, could you say something about the software architecture?
</p><p>
Daniels:</b> There&rsquo;s an operating system underneath that we built ourselves
because we felt that the ones that were out there didn&rsquo;t quite meet our
needs.
</p><p>
<b>BYTE: What does yours do that others don&rsquo;t?
</p><p>
Daniels:</b> It&rsquo;s not just what it does, what it doesn&rsquo;t do.
Some other operating systems are basically timesharing systems like Unix
that have a lot of features that we don&rsquo;t need, and why take
up extra space for that? We wanted a system that the user didn&rsquo;t
have to be experienced to understand, and it had to be very reliable.
It had to maintain the user&rsquo;s data and keep it there. It also had
to support things like graphics, the windows that we have on the screen, the 
mouse, and so forth. We didn&rsquo;t really find an operating system that met 
our needs, so we felt we had to go build our own. We built the other features 
on top of this &ndash; the support for the windows, the support for graphics, 
the support for multiple fonts, the support for printing. It&rsquo;s really quite 
a rich architecture. At least half of the software is in this foundation software.
</p><p>
<b>BYTE: How large is that in bytes? How much code is in that foundation software?
</p><p>
Daniels: </b>Well, source code is something like 10 megabytes. 
</p><p>
<b>Tesler:</b> Object code is about half a megabyte.
</p><p>
<b>BYTE: That&rsquo;s what&rsquo;s there before you put the application programs 
in &ndash; half a megabyte? 
</p><p>
Daniels:</b> Yes.
</p><p>
<b>BYTE: After you specified the user interface, what list of hardware 
requirements did you come up with? 
</p><p>
Rosing:</b> Well, the main list that was specifically user interface would 
be the bit-mapped graphics display and the resolution of approximately 700 
pixels across in the horizontal dimension, the mouse, and the doorless 
disk drives with the eject button rather than an eject handle. They determined 
a lot of the hardware design. We had other user-interface considerations, though. 
We wanted to make the system very easy for its users to service &ndash; I presume 
you&rsquo;ve seen it break apart. Servicing really is simple. It took a 
moderate amount of extra product cost to get that feature in there. And that&rsquo;s 
a part of the even more global user interface, how people perceive the whole 
system. 
</p><p>
<b>BYTE: Why did you choose the 68000 microprocessor and what alternatives did you consider?
</p><p>
Daniels:</b> We thought its architecture was very broad and strong and would 
take us through the &lsquo;80s, and we wanted that. We wanted something to 
support the graphics, and we thought that processor gave us what we needed 
then. The 68000 was a bit of a gamble because it was very
young when we got on it. We were getting one sample at a time from the local 
Motorola engineer here. 
</p><p>
<b>BYTE: Do you think the 68000 will be the dominant processor in the next 
few years? Is it going to overcome the 8088, the 8086?
</p><p>
Rosing:</b> I would speculate that high-end applications with very 
computer-intensive, graphics-intensive needs, the 68000 will become dominant. 
</p><p>
<b>Daniels:</b> But the 8086 has such an installed base going already, I think 
that alone would carry it... 
</p><p>
<b>Tesler:</b> You mean numbers of actual units with the 68000 in it, or 
number of different products? 
</p><p>
<b>BYTE: Both of those questions. 
</p><p>
Tesler:</b> Well, we&rsquo;re putting 68000s in the units we&rsquo;ll sell, so that 
will mean more units with 68000s. We expect to sell a lot of machines. 
</p><p>
<b>BYTE: You&rsquo;ve got a 68000 machine with a lot of memory in there, and 
not too much special-purpose hardware. Why did you decide to do it that way 
instead of using some versatile hardware chips, like the NEC 7220, for video display? 
</p><p>
Daniels:</b> We&rsquo;re very much boosters of bit-mapped graphics, and in fact
hardware support for bit-mapped graphics is pretty small. All you need is 
sort of a shift register. We thought the flexibility that would give us in 
graphics and the things we could do in user interface with bit-mapped graphics was 
well worth the price. 
</p><p>
<b>BYTE: But doesn&rsquo;t the 7220 have bit-mapped graphics itself? 
</p><p>
Rosing:</b> Well, there were a couple of practical considerations. The NEC 7220 didn&rsquo;t 
exist when we designed Lisa, although we knew it was planned. The second 
consideration was that the 7220 cost more than the TTL [transistor-transistor 
logic] hardware needed to implement the equivalent functions. And the third 
consideration was this: because we were able to interleave the memory and 
display cycles, we were able to essentially get data out of the memory at very 
little penalty. Using a 7220 would actually cost considerably more in terms of system
performance. And there was one more consideration: with the 7220, you can&rsquo;t access 
the display memory bank when the chip is refreshing the CRT, and that limits the 
time you can access it to about 10 percent of what we have, which would drastically 
affect performance. We can access memory any time. For equivalent performance, 
we would have to use two 7220s, and that would push the cost and the &ldquo;real estate&rdquo; 
beyond what we have.
</p><p>
<b>BYTE: On the other hand, software doesn&rsquo;t get written overnight... there&rsquo;s 
a certain cost to that. You know, this is very software-intensive. 
</p><p>
Rosing:</b> Most of the software that supports the graphics took three years to write, 
but no hardware in the world can duplicate what that software does.
</p><p>
<b>BYTE: Really? The software is faster than the hardware?
</p><p>
Rosing:</b> No, not always faster. 
</p><p>
<b>BYTE: Its functionality is greater? 
</p><p>
Tesler:</b> Yes. The graphics package lets us draw circles, rectangles, ovals, 
and rectangles with rounded corners. It also automatically handles clipping on 
nonrectangular boundaries. If you have one object over another, you can draw 
the one behind without splashing the pixels on top of the one that&rsquo;s in front. 
That&rsquo;s a... 
</p><p>
<b>BYTE: A software revolution? 
</p><p>
Tesler:</b> A very unusual capability, which no one else has in that general 
form. The other implementations are all either very, very expensive 
hardware &ndash; the $100,000 class &ndash; or in software, which isn&rsquo;t really 
that general and performs much much worse. There&rsquo;s nothing in the same 
class as our software as far as capability and speed. Of course, there is graphics 
software that&rsquo;s faster and hardware that&rsquo;s faster, but it doesn&rsquo;t have
anywhere near this capability. 
</p><p>
<b>BYTE: Do you have a Xerox Star here that you work with? 
</p><p>
Tesler:</b> No, we didn&rsquo;t have one here. We went to the NCC when the Star was 
announced and looked at it. And in fact it did have an immediate impact. A 
few months after looking at it we made some changes to our user interface based 
on ideas that we got from it. For example, the desktop manager we had before 
was completely different; it didn&rsquo;t use icons at all, and we never liked it 
very much. We decided to change ours to the icon base. That was probably the only 
thing we got from the Star, I think. Most of our Xerox inspiration was Smalltalk 
rather than Star. 
</p><p>
<b>BYTE: What does Lisa have that the Star doesn&rsquo;t have? 
</p><p>
Tesler:</b> We&rsquo;re talking about graphics capability. You originally asked 
why we didn&rsquo;t use graphics hardware. Our graphics primitives in software 
are more general than the Star&rsquo;s, so they perform better. We have a faster 
and more general ability to draw on the screen a picture of multiple graphical 
objects in different shapes, to have one window that uncovers another, and 
to repaint just the parts that are uncovered. 
</p><p>
<b>Daniels:</b> Look at the desktop managers of the Star and Lisa. With the 
Star, you can only put them at fixed places on the screen so you know they 
don&rsquo;t ever overlap. On ours, you can put them any place you want. 
It&rsquo;s that generality that allows I us to have arbitrarily shaped things 
I and covering each other up and... 
</p><p>
<b>BYTE: Documents or forms, shapes, or anything...
</p><p>
Daniels:</b> Yes.
</p><p>
<b>Tesler:</b> Right. We have curves in it. Everything in the Star, you&rsquo;ll 
notice, is really rectangular, and our things can have curved edges and that sort of thing.
</p><p>
<b>BYTE: Another hardware question: How many microprocessors are in the machine, 
what are they, and what do they do?
</p><p>
Rosing:</b> Let&rsquo;s see. One to scan the keyboard, in the keyboard housing 
proper; a second one that receives the keyboard commands and keys up mouse events; 
the 6504 that controls two floppy disks; a Z8 microprocessor in the hard-disk 
controller &ndash; it&rsquo;s an intelligent controller; and then, of course, 
the 68000. That&rsquo;s five. 
</p><p>
<b>Tesler:</b> Almost every major chip manufacturer except for one. 
</p><p>
<b>Rosing:</b> And with only one exception all our I/O (input/output) cards have microprocessors.
</p><p>
<b>BYTE: You say that the magnetic read/write head in the disk drive is 
microprocessor-controlled in order to let it be more sensitive to variations 
in the alignment. Is that the 6504? 
</p><p>
Rosing:</b> Yes.
</p><p>
<b>BYTE: What is the microprocessor that handles the keyboard and the mouse?
</p><p>
Rosing:</b> That&rsquo;s a National COPS. We tried to pick the processor that we 
felt was best for each particular job. 
</p><p>
<b>BYTE: The memory is 64K-byte chips? 
</p><p>
Rosing:</b> Yes, 64K chips.
</p><p>
<b>Tesler:</b> On the memory we have parity and...
</p><p>
<b>BYTE: What part of the memory is video memory?
</p><p>
Daniels:</b> Some area in the main memory can be the video. 
</p><p>
<b>Tesler:</b> Any area at all. In fact, if you noticed yesterday in the 
demonstration, when we&rsquo;re developing software, we need debugging information 
to be displayed for the programmer, but we don&rsquo;t want it to come out on 
the same screen that the user is seeing, so we had this magic toggle we were 
hitting that flipped between two screens. There are really two different areas 
of memory with a bit map in each. The software can switch between the two 
to display each in turn. 
</p><p>
<b>BYTE: But they&rsquo;re within the main memory?
</p><p>
Tesler:</b> Yes, absolutely. Anywhere in memory. Take any number of 
consecutive bytes and say that&rsquo;s the bit map. 
</p><p>
<b>BYTE: Is anything else in main memory, or is the rest of it all available 
to the user? Is anything else mapped to the memory? 
</p><p>
Tesler:</b> Oh, I see what you&rsquo;re saying &ndash; the shared memory. Shared 
memory with I/O is not main memory. The I/O memory is in the I/O cards.
</p><p>
<b>Rosing:</b> It&rsquo;s not in the memory, but it&rsquo;s accessed like 
main memory, from the 68000 bus.
</p><p>
<b>Tesler:</b> It&rsquo;s in the address space, but it&rsquo;s not in those 
64K chips. 
</p><p>
<b>BYTE: A certain address is really at I/O port, is that right? 
</p><p>
Rosing:</b> Yes; it&rsquo;s the top physical address of the 68000. 
</p><p>
<b>BYTE: Did you consider voice as part of the user interface? 
</p><p>
Rosing:</b> Yes. We looked at it pretty hard and at one time in the early system 
we actually had a CVSD-based voice subsystem in the computer, and we took 
it out because we didn&rsquo;t feel it achieved the quality we wanted to have 
associated with this system.
</p><p>
<b>BYTE: What does CVSD mean? 
</p><p>
Rosing:</b> Continuously Variable Slope Delta modulation. It&rsquo;s much 
easier to say alphabet soup. We&rsquo;ve thought about voice; it&rsquo;s part 
of our network architecture and will appear in the future, but only when 
we feel the technology&rsquo;s right so we can be proud of what we offer.
</p><p>
<b>BYTE: That&rsquo;s both input and output! 
</p><p>
Rosing:</b> Right. We look at voice as being three problems. There&rsquo;s store 
and forward, which is just moving voice messages around, like a glorified 
answering machine. Second is text to voice; and third, of course, fit 
voice recognition, or voice to text. The last one&rsquo;s the hardest of all, 
but we look at voice technology as something we have to approach in a unified way.
</p><p>
<b>BYTE: What about the programmable serial ports? What chip is used there?
</p><p>
Rosing:</b> They use the Zilog SIO. That was one of the last major changes we 
made in the hardware design. We did it because we had two high-speed ports 
with less board space, and the Zilog SIO chip supports asynchronous as well 
as byte-sync and bit-sync protocols. We felt that made a heck of a lot more 
sense for the customer as the world evolves toward X25-type packet transmission. 
We didn&rsquo;t want to make the customer buy an I/O card to upgrade from 
async to bit-sync. We have only three I/O slots, so we&rsquo;re careful not to 
waste them on things we can put in the main machine.
</p><p>
<b>BYTE: Both serial ports can be bisynchronous?
</p><p>
Rosing:</b> Yes; they can be programmed any way.
</p><p>
<b>BYTE: And can this SIO function as a UART?
</p><p>
Rosing:</b> Yes. A UART/USART combination.
</p><p>
<b>BYTE: When did you know that you were going to have half a megabyte as 
standard memory? When did you know how much you were going to need?
</p><p>
Daniels:</b> It&rsquo;s always been a backward sort of thing. We had the 
capability for a full megabyte in the machine, and it was more a case 
of how much memory we needed to achieve our goal.
</p><p>
<b>Tesler:</b> The sales force wanted it to be 128K; the programmers wanted 
a megabyte. We negotiated. 
</p><p>
<b>Rosing:</b> Since we were writing the code we got the megabyte. 
</p><p>
<b>Tesler:</b> So the hardware people made it as big as they could in 
the address space, and then after some testing of the system we determined 
that half a megabyte was a reasonable compromise of cost and performance. 
</p><p>
<b>BYTE: Do you expect the standard memory on other manufacturers&rsquo; machines 
to jump dramatically after the appearance of Lisa? 
</p><p>
Tesler:</b> Well, apart from its impact on cost, I don&rsquo;t think the amount of 
memory is a critical factor in deciding what machine you want to buy. 
If you&rsquo;re an end user, you should be buying a machine based on what it 
does for you, how easy it is for you to learn, how easy it is to use. Whether 
it has 12 bytes or it has 12 megabytes doesn&rsquo;t really matter to the end user, 
which is our marketplace. We&rsquo;re not selling the machine primarily to programmers 
who might care about that. End users have no idea which systems have more memory or 
less memory or one megabyte or one hundred thousand bytes. If other manufacturers 
are trying to match Apple, they should try to match us on ease of use and 
functionality and things like that. If they can do it in a small amount of 
memory, more power to them. 
</p><p>
<b>BYTE: Doesn&rsquo;t it matter when you&rsquo;re doing something like dictionary 
software or when you want to read a dictionary into memory fast and proofread 
a document very fast? 
</p><p>
Tesler:</b> Yes, there are certain functions where it definitely makes a difference. 
We have that in our Lisa Calc. In order to do rapid recalculation, the whole 
matrix really should be in resident memory, so we spent a lot of time coming 
up with a data structure that packed that data as tight as possible so that 
it would get as many cells as possible into memory, no matter what size memory there 
was. 
</p><p>
<b>BYTE: Your version of BASIC will use more than 64K? 
</p><p>
Daniels:</b> Oh, yes. We could have put less memory in it, but the performance 
would have been unacceptable. Unfortunately, some companies advertise machines that 
have less memory than anyone would ever reasonably buy. We haven&rsquo;t tried to do that here.
</p><p>
<b>BYTE: You didn&rsquo;t use less memory and fewer disk drives than would really 
be effective, and so on? 
</p><p>
Daniels:</b> Yes, and I think when you look at the typical configurations that 
people buy of other machines, the cost is really not that different from 
the kind of costs we&rsquo;re talking about for Lisa. If the other machines 
get loaded up with disks and memory and the other kinds of things you want 
to run, then their prices will be comparable.
</p><p>
<b>BYTE: When you decided you had to have hard-copy graphic output that accurately 
represented the quality of the screen graphics, what choices did you consider 
before you did this amazing adaptation of a $600-$700 printer?
</p><p>
Rosing:</b> A wide range of options were being discussed, all the way from 
thermal printers to laser printers. We tried to identify what&rsquo;s critical 
in the marketplace. We thought there were two printers of first priority: 
a personal printer and one with letter quality. At the same time our sister 
division, the Apple II-III division, was evaluating the same two sets of 
printers. So we teamed up and did a survey of virtually all the printers that 
were available from every manufacturer who would have the volume capability to 
serve our needs. We did an extensive test and put about eight dot-matrix printers 
through their paces with really tough software. Quite a few of them just 
fell right off the table &ndash; it was clear that the quality wasn&rsquo;t there. 
Certain vendors were also much more responsive to fixing problems. So it 
really boiled down to two printers. Then, as we developed our printer software, 
the one we&rsquo;re using now &ndash; the C. Itoh &ndash; just far and away 
stood out as having the best mechanical design. You could put the dots 
where you wanted them repeatedly, and that&rsquo;s what we needed more than 
anything else in the world &ndash; good mechanical design. 
</p><p>
<b>Rosing:</b> And a good price. Same for the letter-quality printer. 
</p><p>
<b>BYTE: The printer you are using is from C. Itoh, but it&rsquo;s your own ROM 
and your own systems software that drives the printer through the ROM. 
</p><p>
Rosing:</b> Correct.
</p><p>
<b>BYTE: What else can you tell us about the printer, especially the dot-matrix?
</p><p>
Daniels:</b> Mechanically it&rsquo;s just a raster device.
</p><p>
<b>Tesler:</b> A character generator is built into it; it has some capabilities. 
It has a single type style that can be stretched horizontally and vertically 
as it&rsquo;s printed, and it has what they call a graphics mode. They 
thought that would be used lightly, but it&rsquo;s what we use almost exclusively. 
And even within the graphics mode, there are two resolutions, low and 
high. High resolution is a lot slower. We wanted to offer the user all these choices.
</p><p>
<b>BYTE: So this is a custom design for you... custom changes? 
</p><p>
Tesler:</b> Custom changes I would say, yes.
</p><p>
<b>BYTE: Did you say it sometimes prints out in character mode? I thought all 
of its printing when you were controlling it was using the highest 
resolution. 
</p><p>
Daniels:</b> I think all the stuff you saw was done at high resolution. 
</p><p>
<b>BYTE: For speed you can go to a different mode?
</p><p>
Tesler:</b> Yes; we&rsquo;re planning to offer the customer a way to get a 
quick draft using the character generator. Characters won&rsquo;t look quite the 
way they will in the final version, but you can get output in a hurry. 
</p><p>
<b>Rosing:</b> The printer will have three different speeds and three 
different quality levels.
</p><p>
<b>BYTE: Do you have an idea where you&rsquo;re going next? 
</p><p>
Rosing:</b> We have what feels like ten years&rsquo; worth of backlog. We 
have a pretty good idea what we&rsquo;re going to do for the next few years. 
</p><p>
<b>BYTE: What&rsquo;s that? 
</p><p>
Rosing:</b> The thrust is to expand the level of integration within the 
applications and to add facilities to make it easier for more applications 
to be written outside of Apple. 
</p><p>
<b>BYTE: Those facilities are development toolkit? 
</p><p>
Rosing:</b> Yes. The development toolkit is a key thing. And for a 
large part of the marketplace, adding network applications and data communications 
is very important. Last but not least is adding really serious database 
functionality to the system. If you add all that up, it&rsquo;s as big a task 
or bigger than what we&rsquo;ve just done. 
</p><p>
<b>Daniels:</b> In fact, almost as important as the team building that 
we&rsquo;ve gone through is building up this foundation that we&rsquo;ve used 
to create the six applications we&rsquo;ve now built. The foundation is 
an amazing application machine. We and others outside Apple can build applications 
that are just amazing now, because no one has to rebuild the foundation. It&rsquo;s 
already there, in place, and we really hope to leverage off that in the future.
</p>
<p class=author>
by Chris Morgan, Gregg Williams (Senior Editor) & Phil Lemmons (West Coast Editor)
</p>

</td><td height=50 style='background: url(intr/3rightfill.png)'><img width=12 height=1 src='intr/3rightfill.png'></td></tr></table></td></tr><tr><td><table cellpadding=0 cellspacing=0 width=100%><tr><td height=30><img width=20 height=30 hspace=0 src='intr/3bottomleft.png'></td><td height=30 width=100% style='background: url(intr/3bottomfill.png)'></td><td height=30><img width=30 height=30 hspace=0 src='intr/3bottomclosed.png'></td></tr></table></td></tr></table></td></tr>

<tr>
<td width=53 valign=top rowspan=2 style='background: url(intr/2bottomfill.png) top repeat-x'><img width=53 height=38 src='intr/2bottomleft.png'></td>
<td align=left valign=top width=100% style='height: 38px; background: url(intr/2bottomfill.png) top repeat-x; padding-left: 12px; padding-right: 12px'>

<table width=100% cellpadding=0 cellspacing=0>
<tr><td valign=top><nobr><a href='about'><img width=59 height=32 border=0 src='intr/2tabs/about.png'></a><a href='contact'><img width=70 height=32 border=0 src='intr/2tabs/contact.png'></a><a href='sitemap'><img width=117 height=32 border=0 src='intr/2tabs/sitemap.png'></a></nobr></td>
<td width=100% valign=top align=right style='padding-right: 10px; padding-top: 10px; padding-bottom: 10px' class=outer2small>


Page added on 15th November 2003.<br><br>Copyright &copy; 2002-2006 <a href='http://www.aresluna.org'>Marcin Wichary</a>, unless stated otherwise.</td></tr></table></td></tr></table>

</body>

</html>
